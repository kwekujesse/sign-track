/**
 * @fileoverview Firestore Security Rules for the SignTrack application.
 *
 * Core Philosophy:
 * This ruleset prioritizes ease of access for prototyping. All authenticated users have read and write access.
 *
 * Data Structure:
 * - /associates/{associateId}: Stores associate profile information.
 * - /orders/{orderId}: Stores order information.
 * - /signatures/{signatureId}: Stores signature data associated with an order.
 *
 * Key Security Decisions:
 * - Open access for prototyping.
 *
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Manages associate profile data.
     * @path /associates/{associateId}
     * @allow (create, update, delete) - Any signed in user can create, update, delete associate data.
     * @allow (get, list) - Any signed in user can get, list associate data.
     * @deny (create, update, delete) - Not signed in user can't create, update, delete associate data.
     * @deny (get, list) - Not signed in user can't get, list associate data.
     * @principle Allows any signed in user to read and write associate data.
     */
    match /associates/{associateId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Manages order information.
     * @path /orders/{orderId}
     * @allow (create, update, delete) - Any signed in user can create, update, delete order data.
     * @allow (get, list) - Any signed in user can get, list order data.
     * @deny (create, update, delete) - Not signed in user can't create, update, delete order data.
     * @deny (get, list) - Not signed in user can't get, list order data.
     * @principle Allows any signed in user to read and write order data.
     */
    match /orders/{orderId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Manages signature data associated with an order.
     * @path /signatures/{signatureId}
     * @allow (create, update, delete) - Any signed in user can create, update, delete signature data.
     * @allow (get, list) - Any signed in user can get, list signature data.
     * @deny (create, update, delete) - Not signed in user can't create, update, delete signature data.
     * @deny (get, list) - Not signed in user can't get, list signature data.
     * @principle Allows any signed in user to read and write signature data.
     */
    match /signatures/{signatureId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    // Helper function to check if a user is signed in
    function isSignedIn() {
      return request.auth != null;
    }
  }
}